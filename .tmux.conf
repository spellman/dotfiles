# Source https://man7.org/linux/man-pages/man1/tmux.1.html#KEY_BINDINGS
# (2023-08-14: I have changed the formatting and some of the phrasing for
# clarity.)
#
# tmux allows a command to be bound to most keys, with or without a prefix key.
# When specifying keys:
#     * Most represent themselves (e.g., `A` to `Z`)
#     * Ctrl keys may be prefixed with `C-` or `^`
#     * Shift keys with `S-`
#     * Alt (meta) with `M-`.
# In addition, the following special key names are accepted:
#     * Up
#     * Down
#     * Left
#     * Right
#     * BSpace
#     * BTab
#     * DC (Delete)
#     * End
#     * Enter
#     * Escape
#     * F1 to F12
#     * Home
#     * IC (Insert)
#     * NPage/PageDown/PgDn
#     * PPage/PageUp/PgUp
#     * Space
#     * Tab.
# Note that to bind the `"` or `'` keys, quotation marks are necessary. E.g.,
#     * bind-key '"' split-window
#     * bind-key "'" new-window
#
# bind [-nr] [-N note] [-T key-table] key command [argument ...]
# (alias: bind)
#
# Bind key key to command. Keys are bound in a key table.
# By default (without -T), the key is bound in the prefix key table.
# This table is used for keys pressed after the prefix key.
# E.g., by default ‘c’ is bound to new-window in the prefix table, so ‘C-b c’
# creates a new window.
#
# The root table is used for keys pressed without the prefix key.
# Bind keys to the root table with -T (for table, which defautls to root; alias
# is -n).
# E.g., binding ‘c’ to new-window in the root table (not recommended) means a
# plain ‘c’ will create a new window.
#
# Keys may also be bound in custom key tables and the switch-client -T command
# used to switch to them from a key binding.
#
# The -r flag indicates this key may repeat, see the repeat-time option.
#
# -N attaches a note to the key (shown with list-keys -N).


# Terminal colors
# Source: https://github.com/ThePrimeagen/.dotfiles/blob/602019e902634188ab06ea31251c01c1a43d1621/tmux/.tmux.conf#L1C1-L3C21
set -ga terminal-overrides ",screen-256color*:Tc"
set -g default-terminal "screen-256color"
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Set C-a as prefix
# Source https://github.com/ThePrimeagen/.dotfiles/blob/602019e902634188ab06ea31251c01c1a43d1621/tmux/.tmux.conf#L5C1-L8C44
unbind C-b
set -g prefix C-a
# Send prefix (C-a) through to underlying application by pressing twice.
bind -N "Prefix" C-a send-prefix

set -g status-style 'bg=#333333 fg=#5eacd3'
# Keybindings in the status line.
# ------------------------------------------------------------------------------
# Source https://github.com/tmux-plugins/tmux-sensible#options
# > Emacs key bind ngs in tmux command prompt (prefix + :) are better than vi
# > keys, even for vim users.
# ------------------------------------------------------------------------------
# Source: https://man7.org/linux/man-pages/man1/tmux.1.html
# > The default is emacs, unless the VISUAL or EDITOR environment variables are
# > set and contain the string ‘vi’.
set -g status-keys emacs

# Reload this file (~/.tmux.conf) with prefix r.
bind -N "Reload tmux conf" r source-file ~/.tmux.conf \; display "tmux.conf reloaded"

# Window and pane numbering starts at 1 instead of 0.
set -g base-index 1
set-window-option -g pane-base-index 1

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
set-window-option -g aggressive-resize on

# History
set -g history-limit 100000
# bind -N "Clear history" -n C-k clear-history

# Set the current working directory based on the current pane's current
# working directory (if set; if not, use the pane's starting directory)
# when creating # new windows and splits.
# https://woss.name/articles/tmux-new-windows-in-current-directory/
bind c new-window -c '#{pane_current_path}'
# Split windows mnemonically
# bind -N "Split window vertically" -n M-\ split-window -h -c '#{pane_current_path}'
# bind -N "Split window horizontally" -n M-- split-window -v -c '#{pane_current_path}'

# Move between panes with vi movements
# With prefix - do I prefer this?
bind -N "Select last window" -r ^ last-window
bind -N "Select pane to left" -r h select-pane -L
bind -N "Select pane below" -r j select-pane -D
bind -N "Select pane above" -r k select-pane -U
bind -N "Select pane to right" -r l select-pane -R
# Without prefix - do I prefer this?
bind -N "Select last window" -n C-M-S-6 last-window
bind -N "Select pane to left" -n C-M-S-h select-pane -L
bind -N "Select pane below" -n C-M-S-j select-pane -D
bind -N "Select pane above" -n C-M-S-k select-pane -U
bind -N "Select pane to right" -n C-M-S-l select-pane -R

# Even window layouts
bind -N "Equalize panes horizontally" -n M-= select-layout even-horizontal
bind -N "Equalize panes vertically" M-+ select-layout even-vertical

# Resize panes
bind -N "Grow pane up" -nr M-Up resize-pane -U
bind -N "Grow pane down" -nr M-Down resize-pane -D
bind -N "Grow pane left" -nr M-Left resize-pane -L
bind -N "Grow pane right" -nr M-Right resize-pane -R

# Source https://github.com/ThePrimeagen/.dotfiles/blob/602019e902634188ab06ea31251c01c1a43d1621/tmux/.tmux.conf#L26C1-L27C66
# forget the find window.  That is for chumps
bind -N "tmux sessionizer" -r f run-shell "tmux new-window ~/.local/bin/tmux-sessionizer.sh"

# Move around copy mode with vi movement keys. (Enable copy mode with prefix-[ )
# I.e., "mode" means "copy mode".
set-window-option -g mode-keys vi
# unbind p
# bind p paste-buffer
# bind -n copy-mode-vi v send-keys -X begin-selection
# bind -n copy-mode-vi y send-keys -X copy-selection-and-cancel

# Mouse
set-window-option -g mouse
# Source: https://groups.google.com/g/tmux-users/c/TRwPgEOVqho/m/Ck_oth_SDgAJ
# Scroll one line at a time.
bind -n WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -n WheelDownPane select-pane -t= \; send-keys -M
# Scroll faster with Control
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# Activity alert
set-window-option -g monitor-activity on
set -g visual-activity on
